// JavaScript source code

function Admin_Login(userName, Password) {
	if(userName && Password is valid){
	 // Login success	
		tokengeneration()
	} else {
		//Login Fail
	}
}


function Admin_createaccount(Name, UserID, email, Password, AccountType, UserStatus) {
	Name: var
	UserID: var
	email: var
	Password: var
	AccountType: var
	UserStatus: var
	if(UserID exists){
		//account creation fail
	}
	else{
		//account creation success
		Security_encryptdata(Userdata)
	}
}
 function Admin_editaccount(fieldName, fieldValue, UserID){
	if(fieldName exists) {
		//update fieldValue
	}
	else{
		//update failed
	}
 }

function Admin_disable user(UserID){
	if(UserID exists){
		//disable user
	}
	else{
		//disabling failed
	}
}

function Admin_assignaccess(UserID, new_AccountType){
	if(new_AccountType is same as current_AccountType){
		//update failed
	}
	else{
		//AccountType change successfull
	}
}

function Admin_revokeaccess(UserID){
	if(UserID exists){
		//revoke access
	}
	else{
		//user does not exist
	}
}
//Login module

function Users_authentication(userName,Password){
	if(userName && Password is valid){
	 // Login success	
		tokengeneration()
	} elseif (user wants to retry){
		//Login Fail
		Users_authentication
	}
	elseif (user wants to change password){
		Users_forgotpassword
	}
}

function Users_forgotpassword(email){
		if(email exists){
			//send link to create new Password
		}
		else{
			//email not associated with userName
		}
}

Simulation_start(staff_UserID, stud_UserID){

	if(staff_userID equals AccessType "staff"){
		Stage1_eggtocaterpillar(autoGeneratedsimulationId);
	}
	else{
		//access denied
	}
}

Simulation_pause(autoGeneratedsimulationId){
	
	if(staff_userID equals AccessType "staff" && autoGeneratedsimulationId is valid){
		//pause simulation
	}
	else
	{
		//access denied
	}
	
}
Simulation_view(UserID, autoGeneratedsimulationId){

	if(UserID is valid){
		//view simulation
	}
}
Simulation_stop(autoGeneratedsimulationId){

	if(staff_userID equals AccessType "staff" && autoGeneratedsimulationId is valid){
		//stop simulation
	}
	else{
		//access denied
	}
}

Stage1_eggtocaterpillar(autoGeneratedsimulationId){
	if(Stage1_eggtocaterpillar is done)
	{
		Stage2_caterpillartochrysalis(autoGeneratedsimulationId)
	}
	elseif(Stage1_eggtocaterpillar is inprogress){
		//Stage1_eggtocaterpillar is inprogress	
	}
}
Stage2_caterpillartochrysalis(autoGeneratedsimulationId){
	if(Stage2_caterpillartochrysalis is done){
		Stage3_caterpillartochrysalis(autoGeneratedsimulationId)
	}
	elseif(Stage2_eggtocaterpillar is inprogress){
		//Stage2_caterpillartochrysalis inprogress
	}
}
Stage3_chrysalistolepidoptera(autoGeneratedsimulationId){
	if(Stage3_caterpillartochrysalis is done){
		//simulation success
	}
}

Security_authenticateusers(){
	if(request as valid token in the header){
		//the response is sent
	}
	else{
		//token invalid
	}

}
Security_encryptdata(input string){
	//convert input string to base64
}
Security_tokengeneration(){
	//alphanumeric string token will be generated
}
Security_tokenvalidation(token){
	if(token is valid){
		//valid token
	}
	else{
		//invalid token
	}
}




